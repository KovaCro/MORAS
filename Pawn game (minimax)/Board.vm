function Board.new 1
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 0
pop local 0
push argument 0
pop this 1
push argument 0
push argument 0
call Math.multiply 2
call Array.new 1
pop this 0
push constant 255
push argument 0
call Math.divide 2
pop this 2
label WHILE_EXP0
push local 0
push argument 0
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push argument 0
push constant 1
sub
call Math.multiply 2
push local 0
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 3
push pointer 0
return
function Board.getState 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function Board.getStateArr 0
push argument 0
pop pointer 0
push this 0
return
function Board.whiteHasMoves 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
push constant 1
sub
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
add
push this 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 1
call Math.multiply 2
push this 1
add
push local 1
add
push constant 1
add
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
label IF_FALSE2
label IF_FALSE1
push local 1
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push this 1
call Math.multiply 2
push this 1
add
push local 1
add
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
return
label IF_FALSE4
label IF_FALSE3
push local 0
push this 1
call Math.multiply 2
push this 1
add
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.blackHasMoves 2
push argument 0
pop pointer 0
push constant 1
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
add
push this 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 1
call Math.multiply 2
push this 1
sub
push local 1
add
push constant 1
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
label IF_FALSE2
label IF_FALSE1
push local 1
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push this 1
call Math.multiply 2
push this 1
sub
push local 1
add
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
return
label IF_FALSE4
label IF_FALSE3
push local 0
push this 1
call Math.multiply 2
push this 1
sub
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.drawSquare 0
push argument 0
pop pointer 0
push argument 2
push argument 1
add
call Utility.isEven 1
call Screen.setColor 1
pop temp 0
push argument 1
push this 2
call Math.multiply 2
push argument 2
push this 2
call Math.multiply 2
push argument 1
push constant 1
add
push this 2
call Math.multiply 2
push argument 2
push constant 1
add
push this 2
call Math.multiply 2
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Board.drawCursor 0
push argument 0
pop pointer 0
push argument 2
push argument 1
add
call Utility.isEven 1
not
call Screen.setColor 1
pop temp 0
push argument 1
push this 2
call Math.multiply 2
push this 2
push constant 2
call Math.divide 2
add
push argument 2
push this 2
call Math.multiply 2
push this 2
push constant 2
call Math.divide 2
add
push this 2
push constant 2
call Math.divide 2
push constant 1
sub
call Screen.drawCircle 3
pop temp 0
push pointer 0
push argument 1
push argument 2
push argument 1
push this 1
call Math.multiply 2
push argument 2
add
push this 0
add
pop pointer 1
push that 0
call Board.drawPiece 4
pop temp 0
push constant 0
return
function Board.drawPiece 1
push argument 0
pop pointer 0
push argument 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 2
push constant 4
call Math.divide 2
pop local 0
push argument 3
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push this 2
call Math.multiply 2
push local 0
add
push argument 2
push this 2
call Math.multiply 2
push local 0
add
push argument 1
push constant 1
add
push this 2
call Math.multiply 2
push local 0
sub
push argument 2
push constant 1
add
push this 2
call Math.multiply 2
push local 0
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push this 2
call Math.multiply 2
push local 0
add
push constant 2
add
push argument 2
push this 2
call Math.multiply 2
push local 0
add
push constant 2
add
push argument 1
push constant 1
add
push this 2
call Math.multiply 2
push local 0
sub
push constant 2
sub
push argument 2
push constant 1
add
push this 2
call Math.multiply 2
push local 0
sub
push constant 2
sub
call Screen.drawRectangle 4
pop temp 0
goto IF_END1
label IF_FALSE1
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push this 2
call Math.multiply 2
push local 0
add
push argument 2
push this 2
call Math.multiply 2
push local 0
add
push argument 1
push constant 1
add
push this 2
call Math.multiply 2
push local 0
sub
push argument 2
push constant 1
add
push this 2
call Math.multiply 2
push local 0
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push this 2
call Math.multiply 2
push local 0
add
push constant 2
add
push argument 2
push this 2
call Math.multiply 2
push local 0
add
push constant 2
add
push argument 1
push constant 1
add
push this 2
call Math.multiply 2
push local 0
sub
push constant 2
sub
push argument 2
push constant 1
add
push this 2
call Math.multiply 2
push local 0
sub
push constant 2
sub
call Screen.drawRectangle 4
pop temp 0
label IF_END1
push constant 0
return
function Board.drawBoard 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push pointer 0
push local 0
push local 1
call Board.drawSquare 3
pop temp 0
push pointer 0
push local 0
push local 1
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
call Board.drawPiece 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.printstate 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.movePiece 1
push argument 0
pop pointer 0
push argument 1
push this 1
call Math.multiply 2
push argument 2
add
push this 0
add
pop pointer 1
push that 0
pop local 0
push pointer 0
push argument 1
push argument 2
call Board.drawSquare 3
pop temp 0
push argument 1
push this 1
call Math.multiply 2
push argument 2
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 1
call Math.multiply 2
push this 1
add
push argument 2
add
push argument 3
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push argument 1
push constant 1
add
push argument 2
push argument 3
add
push constant 1
call Board.drawPiece 4
pop temp 0
push argument 1
push constant 1
add
return
goto IF_END0
label IF_FALSE0
push argument 1
push this 1
call Math.multiply 2
push this 1
sub
push argument 2
add
push argument 3
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push argument 1
push constant 1
sub
push argument 2
push argument 3
add
push constant 2
call Board.drawPiece 4
pop temp 0
push argument 1
push constant 1
sub
return
label IF_END0
function Board.blackGreedy 2
push argument 0
pop pointer 0
push constant 1
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
add
push this 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 1
call Math.multiply 2
push this 1
sub
push local 1
add
push constant 1
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 0
push local 1
push constant 1
call Board.movePiece 4
pop temp 0
push local 0
push constant 1
sub
return
label IF_FALSE2
label IF_FALSE1
push local 1
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push this 1
call Math.multiply 2
push this 1
sub
push local 1
add
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push local 0
push local 1
push constant 1
neg
call Board.movePiece 4
pop temp 0
push local 0
push constant 1
sub
return
label IF_FALSE4
label IF_FALSE3
push local 0
push this 1
call Math.multiply 2
push this 1
sub
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push local 0
push local 1
push constant 0
call Board.movePiece 4
pop temp 0
push local 0
push constant 1
sub
return
label IF_FALSE5
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 1
neg
return
function Board.perft 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 3
push constant 1
add
pop this 3
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push this 1
push constant 1
sub
lt
not
if-goto WHILE_END2
push constant 0
pop local 1
label WHILE_EXP3
push local 1
push this 1
lt
not
if-goto WHILE_END3
push local 0
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push argument 1
call Board.perft 2
pop temp 0
push local 0
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push local 1
push constant 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push argument 1
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push argument 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push argument 1
call Board.perft 2
pop temp 0
push local 0
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push argument 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
label IF_FALSE2
push local 1
push constant 1
add
push this 1
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push argument 1
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push argument 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push argument 1
call Board.perft 2
pop temp 0
push local 0
push this 1
call Math.multiply 2
push local 1
add
push argument 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push argument 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE5
label IF_FALSE4
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP3
label WHILE_END3
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Board.getPerftCount 0
push argument 0
pop pointer 0
push this 3
return
function Board.blackMinimax 4
push argument 0
pop pointer 0
push constant 1
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.maxi 1
pop local 3
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
neg
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 0
push local 1
push constant 0
call Board.movePiece 4
pop temp 0
push local 0
push constant 1
sub
return
label IF_FALSE2
label IF_FALSE1
push local 1
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.maxi 1
pop local 3
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
neg
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push local 0
push local 1
push constant 1
neg
call Board.movePiece 4
pop temp 0
push local 0
push constant 1
sub
return
label IF_FALSE5
label IF_FALSE4
label IF_FALSE3
push local 1
push constant 1
add
push this 1
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.maxi 1
pop local 3
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
neg
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push local 0
push local 1
push constant 1
call Board.movePiece 4
pop temp 0
push local 0
push constant 1
sub
return
label IF_FALSE8
label IF_FALSE7
label IF_FALSE6
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Board.blackGreedy 1
pop local 2
push local 2
return
function Board.maxi 4
push argument 0
pop pointer 0
push constant 0
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push this 1
push this 1
push constant 1
sub
call Math.multiply 2
push local 0
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push this 1
push constant 1
sub
lt
not
if-goto WHILE_END1
push constant 0
pop local 1
label WHILE_EXP2
push local 1
push this 1
lt
not
if-goto WHILE_END2
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.mini 1
pop local 2
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
return
goto IF_END3
label IF_FALSE3
push constant 0
not
pop local 3
label IF_END3
label IF_FALSE2
push local 1
push constant 0
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.mini 1
pop local 2
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 1
return
goto IF_END6
label IF_FALSE6
push constant 0
not
pop local 3
label IF_END6
label IF_FALSE5
label IF_FALSE4
push local 1
push constant 1
add
push this 1
lt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.mini 1
pop local 2
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 1
return
goto IF_END9
label IF_FALSE9
push constant 0
not
pop local 3
label IF_END9
label IF_FALSE8
label IF_FALSE7
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 3
push constant 0
not
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 1
neg
return
label IF_FALSE10
push constant 1
return
function Board.mini 4
push argument 0
pop pointer 0
push constant 0
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 1
pop local 0
label WHILE_EXP1
push local 0
push this 1
lt
not
if-goto WHILE_END1
push constant 0
pop local 1
label WHILE_EXP2
push local 1
push this 1
lt
not
if-goto WHILE_END2
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.maxi 1
pop local 2
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
neg
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
neg
return
goto IF_END3
label IF_FALSE3
push constant 0
not
pop local 3
label IF_END3
label IF_FALSE2
push local 1
push constant 0
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.maxi 1
pop local 2
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
sub
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
neg
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 1
neg
return
goto IF_END6
label IF_FALSE6
push constant 0
not
pop local 3
label IF_END6
label IF_FALSE5
label IF_FALSE4
push local 1
push constant 1
add
push this 1
lt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Board.maxi 1
pop local 2
push local 0
push this 1
call Math.multiply 2
push local 1
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
push this 1
call Math.multiply 2
push local 1
add
push constant 1
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
neg
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 1
neg
return
goto IF_END9
label IF_FALSE9
push constant 0
not
pop local 3
label IF_END9
label IF_FALSE8
label IF_FALSE7
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 3
push constant 0
not
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 1
return
label IF_FALSE10
push constant 1
neg
return
